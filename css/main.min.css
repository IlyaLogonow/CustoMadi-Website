@charset "UTF-8";@-webkit-keyframes swing-forwards{0%{z-index:1;-webkit-transform:scale(.9);transform:scale(.9)}50%{-webkit-transform:translateX(var(--swing));transform:translateX(var(--swing))}to{z-index:2;-webkit-transform:translateX(var(--overlap)) scale(1.1);transform:translateX(var(--overlap)) scale(1.1)}}@keyframes swing-forwards{0%{z-index:1;-webkit-transform:scale(.9);transform:scale(.9)}50%{-webkit-transform:translateX(var(--swing));transform:translateX(var(--swing))}to{z-index:2;-webkit-transform:translateX(var(--overlap)) scale(1.1);transform:translateX(var(--overlap)) scale(1.1)}}@-webkit-keyframes swing-backwards{0%{z-index:2;-webkit-transform:translateX(var(--overlap)) scale(1.1);transform:translateX(var(--overlap)) scale(1.1)}50%{-webkit-transform:translateX(var(--swing));transform:translateX(var(--swing))}to{z-index:1;-webkit-transform:scale(.9);transform:scale(.9)}}@keyframes swing-backwards{0%{z-index:2;-webkit-transform:translateX(var(--overlap)) scale(1.1);transform:translateX(var(--overlap)) scale(1.1)}50%{-webkit-transform:translateX(var(--swing));transform:translateX(var(--swing))}to{z-index:1;-webkit-transform:scale(.9);transform:scale(.9)}}:root{--bacgraund:#F4FFE7;--main-color:#080707;--text-color:#F4FFE7}*,:after,:before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}a:active,a:focus{outline:0}.card img,body,html{height:100%}html{-webkit-box-sizing:border-box;box-sizing:border-box}input[type=text]{font:inherit/inherit inherit;margin:0}ul{list-style:none}a{text-decoration:none}.vis-hid{position:absolute;visibility:hidden}.title{font-size:30px;margin-bottom:25px}body{font-family:"Aboreto",cursive}.et-hero-tabs,.et-slide{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100vh;position:relative}.et-hero-tabs__logo{width:600px;max-width:100%}.et-hero-tabs-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;position:absolute;bottom:0;width:100%;height:75px;-webkit-box-shadow:0 2px 20px 6px rgba(0,0,0,.37);box-shadow:0 2px 20px 6px rgba(0,0,0,.37);background:var(--main-color);z-index:10}.et-hero-tabs-container--top{position:fixed;top:0}.et-hero-tab,.shop{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.et-hero-tab,.et-hero-tab:hover{-webkit-transition:all .8s ease;-o-transition:all .8s ease;transition:all .8s ease}.et-hero-tab{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:1;-ms-flex:1;flex:1;color:var(--text-color);letter-spacing:.1rem}.et-hero-tab:hover{color:var(--main-color);background:var(--bacgraund)}.shop{-ms-flex-pack:distribute;justify-content:space-around;height:100vh}.card{width:370px;height:410px;padding:2em;border:1px solid rgba(255,255,255,.5);-webkit-box-shadow:0 2px 20px 6px rgba(0,0,0,.2);box-shadow:0 2px 20px 6px rgba(0,0,0,.2);background:rgba(255,255,255,.2);-webkit-backdrop-filter:blur(20px);backdrop-filter:blur(20px);-webkit-transform:perspective(500px);transform:perspective(500px);-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.card img{width:100%}.card p,input{position:absolute}.card,.card p{border-radius:1em}.card p{background:var(--main-color);top:-30px;right:140px;padding:15px;color:var(--text-color);text-align:center}.card:hover{-webkit-box-shadow:0 -5px 10px 5px rgba(0,0,0,.5);box-shadow:0 -5px 10px 5px rgba(0,0,0,.5)}.shipping{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100vh}input{width:1px;clip:rect(0 0 0 0);overflow:hidden;white-space:nowrap}.selector{display:grid;grid-template-areas:"happy lovers" "pick  pick"}label{display:block;cursor:pointer}.international-card,.russia-card{position:relative;width:400px;padding:2em;border-radius:1em;-webkit-box-shadow:0 2px 20px 6px rgba(0,0,0,.2);box-shadow:0 2px 20px 6px rgba(0,0,0,.2);background:rgba(255,255,255,.2);-webkit-transform:perspective(500px);transform:perspective(500px);-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.international-card{grid-area:happy;margin-right:-10px;--swing:-25px;--overlap:25px}.russia-card{grid-area:lovers;margin-left:-10px;--swing:25px;--overlap:-25px}#international-radio:checked~.selector .international-card,#russia-radio:checked~.selector .russia-card{-webkit-animation-name:swing-forwards;animation-name:swing-forwards}#international-radio:checked~.selector .russia-card,#russia-radio:checked~.selector .international-card{-webkit-animation-name:swing-backwards;animation-name:swing-backwards}.shipping__title{margin:0;padding-bottom:10px;border-bottom:1px dashed #bdd6d2;font-size:1.5rem}.shipping__list{list-style:square;margin:15px 0;padding-left:30px;line-height:1.5rem}.international-pick,.russia-pick{background:#000;grid-area:pick;margin:50px auto 0;padding:15px;border:1px solid #f4f7f7;border-radius:9999px;font-size:1.25rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:#fff}.international-pick::before,.russia-pick::after{display:inline-block;font-family:"Font Awesome 5 Free";font-weight:700}.international-pick::before{margin-right:10px;content:"<"}.russia-pick::after{margin-left:10px;content:">"}#international-radio:checked~.selector .international-pick,#russia-radio:checked~.selector .russia-pick{display:none}.about-me__item:not(:last-child){margin-bottom:60px}.about-me__item p{text-align:center;font-size:30px;max-width:1000px}.accordion-row,.fqu{display:-webkit-box;display:-ms-flexbox;display:flex}.fqu{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100vh;position:relative}.accordion-row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.accordion{background:#fff;color:#080707;font-size:20px;cursor:pointer;padding:18px;width:100%;text-align:left;border:0;outline:0;-webkit-transition:.6s;-o-transition:.6s;transition:.6s}.accordion:hover,.active{background:#080707;color:#eee}.accordion:after{content:"➕";font-size:13px;color:#080707;float:right;margin-left:5px}.active:after{content:"➖"}.panel{background:#fff;padding:0 18px;max-height:0;overflow:hidden;-webkit-transition:max-height .2s ease-out;-o-transition:max-height .2s ease-out;transition:max-height .2s ease-out}@media (max-width:560px){.international-card{margin-right:-85px;--swing:-100px}.russia-card{margin-left:-85px;--swing:100px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */